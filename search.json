[{"path":"https://ncezid-biome.github.io/source-attribution-MLST/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lee Katz. Author, maintainer. Zhaohui Cui. Author. Sean Browning. Author.","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Katz L, Cui Z, Browning S (2024). sourcerer: Predicts Food Source MLST Profile. R package version 0.1.0, https://ncezid-biome.github.io/source-attribution-MLST.","code":"@Manual{,   title = {sourcerer: Predicts Food Source from an MLST Profile},   author = {Lee Katz and Zhaohui Cui and Sean Browning},   year = {2024},   note = {R package version 0.1.0},   url = {https://ncezid-biome.github.io/source-attribution-MLST}, }"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/index.html","id":"source-attribution-mlst","dir":"","previous_headings":"","what":"Predicts Food Source from an MLST Profile","title":"Predicts Food Source from an MLST Profile","text":"package implements ideas source attributions project Gu et al 2023. Given set known bacterial foodborne pathogens MLST profile, package can predict food sources future bacterial foodborne pathogen genomes. Create set random forest models Query genome random forest models Aggregate predictions","code":"flowchart LR     A[MLST profiles of bacterial foodborne pathogens with known etiology]          --> |\"bootstrap()\"| B{{random forest models}}       C[MLST profile of new bacterial foodborn pathogen]         --> |\"predict()\"| B     B --> |\"predict()\"| D{{Predictions}}     D --> |\"aggregate_predictions()\"| E{{Aggregate stats:\\n* Best estimates of food vehicle\\n* Rankings of most determinant loci}}     B --> |\"aggregate_models()\" | F{{Aggregate reference model\\n* Most important genes}}"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Predicts Food Source from an MLST Profile","text":"Requires R devtools install executable scripts, locate installed, e.g., $HOME/R/4/3.2/sourcerer, update PATH. Linux, looks like :","code":"library(devtools) devtools::install_github(\"ncezid-biome/source-attribution-MLST\") # Find the installation find ~ -type d -name sourcerer # => assume the path is $HOME/R/4/3.2/sourcerer for this example export PATH=$PATH:$HOME/R/4/3.2/sourcerer/exec # Double check the installation with the which command which bootstrapRF.R which predictRF.R"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Predicts Food Source from an MLST Profile","text":"First, create model models bootstrapping() Rscript bootstrapRF.R. , query model prediction() Rscript predictRF.R. Creating model done “bootstrap” represents one outcome stochatic outcomes random forest model. Therefore, usage create many models run prediction many models get aggregated outcome.","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/index.html","id":"examples-with-api","dir":"","previous_headings":"Usage","what":"Examples with API","title":"Predicts Food Source from an MLST Profile","text":"","code":"library(\"sourcerer\")  reps    <- 10 my_seed <- 23 # leave blank for random seed ncores  <- 1  # parallelization  # Random forest modeling step rf_filenames <- bootstrapping(                    input  = \"tests/testthat/Listeria_isolates.csv.gz\",                    output = \"results/\",                    ncores = ncores,                    bootstrap_reps  = reps,                    loci_start_with = \"LMO\",                    my_seed = my_seed                 )   # Make predictions, one per model predictions <- list() for(i in (1:seq_along(rf_filenames))){   predictions[[i]] <- prediction(         model_filename = rf_filenames[[i]],         query = \"tests/testthat/example_query.csv\",          ncores = ncores) }  # Get a table of predictions aggregate_predictions_table <- aggregate_predictions(                                   predictions = predictions)  print(aggregate_predictions_table)  # Aggregate the models to find the most important genes ref_model <- aggregate_model(rf_filenames) print(head(ref_model$aggregate_rank))"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/Listeria_isolates.html","id":null,"dir":"Reference","previous_headings":"","what":"Listeria isolates — Listeria_isolates","title":"Listeria isolates — Listeria_isolates","text":"dataset provides example spreadsheet creating random forest model.","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/Listeria_isolates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Listeria isolates — Listeria_isolates","text":"","code":"Listeria_isolates"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/Listeria_isolates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Listeria isolates — Listeria_isolates","text":"file path Listeria_isolates.csv.gz","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/aggregate_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate models — aggregate_model","title":"Aggregate models — aggregate_model","text":"function makes composite model many models coming bootstrapping()","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/aggregate_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate models — aggregate_model","text":"","code":"aggregate_model(models)"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/aggregate_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate models — aggregate_model","text":"models (vector rfsrc objects)","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/aggregate_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate models — aggregate_model","text":"composite (rfsrc object) first rfsrc object returned modified attribute $aggregate_rank: gene given median rank order importance according VIMP scores bootstrap.","code":""},{"path":[]},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/aggregate_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate predictions — aggregate_predictions","title":"Aggregate predictions — aggregate_predictions","text":"function aggregates predictions multiple calls prediction().","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/aggregate_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate predictions — aggregate_predictions","text":"","code":"aggregate_predictions(predictions)"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/aggregate_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate predictions — aggregate_predictions","text":"predictions (vector predict.rfsrc() objects) prediction objects prediction().","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/aggregate_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate predictions — aggregate_predictions","text":"category_summary (data frame) table means standard deviations confidences category","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/aggregate_predictions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate predictions — aggregate_predictions","text":"","code":"if (FALSE) { # Example usage: prediction <- list() predictions[[1]] <- prediction(model = \"bs23.rds\", ...) predictions[[2]] <- prediction(model = \"bs24.rds\", ...) result <- aggregate_predictions(predictions) }"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/bootstrapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap random forest analysis — bootstrapping","title":"Bootstrap random forest analysis — bootstrapping","text":"function creates one random forest models spreadsheet MLST profiles. many situations, want make many random forest models make predictions one downstream.","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/bootstrapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap random forest analysis — bootstrapping","text":"","code":"bootstrapping(   input,   output,   ncores = 1L,   bootstrap_reps = 1L,   loci_start_with = \"LMO\",   my_seed = 23L )"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/bootstrapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap random forest analysis — bootstrapping","text":"input (character) input file path MLST profile data csv csv.gz format. output (character) output directory random forest models. ncores (integer, default: 1L) number cores use parallel processing. bootstrap_reps (integer, default: 1L) number bootstrap replicates. loci_start_with (character, default: \"LMO\") prefix loci names. my_seed (integer, default: 23L) seed reproducibility.","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/bootstrapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap random forest analysis — bootstrapping","text":"my_filenames list random forest filenames","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/bootstrapping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap random forest analysis — bootstrapping","text":"","code":"if (FALSE) { # Example usage: model_filenames <- bootstrapping(                       input = \"tests/testthat/isolates_original_plus_new_dec_1_2021.csv.gz\",                       output = \"results/\",                       ncores = 4,                        bootstrap_reps = 100) }"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/cal_conf_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"cal_conf_attr — cal_conf_attr","title":"cal_conf_attr — cal_conf_attr","text":"cal_conf_attr","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/cal_conf_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cal_conf_attr — cal_conf_attr","text":"","code":"cal_conf_attr(n.rep, pred, train = NULL)"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/cal_conf_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cal_conf_attr — cal_conf_attr","text":"n.rep  pred  train","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/cal_conf_attr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cal_conf_attr — cal_conf_attr","text":"idea","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/cal_conf_attr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cal_conf_attr — cal_conf_attr","text":"","code":"TODO #> Error in eval(expr, envir, enclos): object 'TODO' not found"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/example_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Example query — example_query","title":"Example query — example_query","text":"example query use prediction step.","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/example_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example query — example_query","text":"","code":"example_query"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/example_query.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example query — example_query","text":"file path example_query.csv","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/plot_panel_pred_prob_ind.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_panel_pred_prob_ind — plot_panel_pred_prob_ind","title":"plot_panel_pred_prob_ind — plot_panel_pred_prob_ind","text":"plot_panel_pred_prob_ind","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/plot_panel_pred_prob_ind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_panel_pred_prob_ind — plot_panel_pred_prob_ind","text":"","code":"plot_panel_pred_prob_ind(pred, train = NULL)"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/plot_panel_pred_prob_ind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_panel_pred_prob_ind — plot_panel_pred_prob_ind","text":"pred  train","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/plot_panel_pred_prob_ind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_panel_pred_prob_ind — plot_panel_pred_prob_ind","text":"list(p=p)","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/plot_panel_pred_prob_ind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_panel_pred_prob_ind — plot_panel_pred_prob_ind","text":"","code":"TODO #> Error in eval(expr, envir, enclos): object 'TODO' not found"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/prediction.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict using a random forest model — prediction","title":"Predict using a random forest model — prediction","text":"function makes predictions using random forest model. many situations, want make predictions many random forest models aggregate downstream.","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/prediction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict using a random forest model — prediction","text":"","code":"prediction(model_filename, query, ncores = 1L)"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/prediction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict using a random forest model — prediction","text":"model_filename (character) filename Random Forest model. query (character) filename query data CSV format. MLST profiles spreadsheet. ncores (integer, default: 1L) number cores use parallel processing.","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/prediction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict using a random forest model — prediction","text":"prediction prediction object predict.rfsrc()","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/prediction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict using a random forest model — prediction","text":"","code":"if (FALSE) { # Example usage: result <- prediction(model_filename = \"results/bs23.rds\",                      query = \"tests/testthat/example_query.csv\", ncores = 4) }"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/rds_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"rds folder — rds_dir","title":"rds folder — rds_dir","text":"RDS files stored unit tests","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/rds_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rds folder — rds_dir","text":"","code":"rds_dir"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/rds_dir.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"rds folder — rds_dir","text":"file path rds_dir","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/sel_rep_iso.html","id":null,"dir":"Reference","previous_headings":"","what":"sel_rep_iso — sel_rep_iso","title":"sel_rep_iso — sel_rep_iso","text":"sel_rep_iso","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/sel_rep_iso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sel_rep_iso — sel_rep_iso","text":"","code":"sel_rep_iso(dat, ht, cgmlst_loci)"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/sel_rep_iso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sel_rep_iso — sel_rep_iso","text":"dat  ht  cgmlst_loci","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/sel_rep_iso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sel_rep_iso — sel_rep_iso","text":"cluster.id","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/sel_rep_iso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sel_rep_iso — sel_rep_iso","text":"","code":"TODO #> Error in eval(expr, envir, enclos): object 'TODO' not found"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/sen_spe.html","id":null,"dir":"Reference","previous_headings":"","what":"sen_spe — sen_spe","title":"sen_spe — sen_spe","text":"sen_spe","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/sen_spe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sen_spe — sen_spe","text":"","code":"sen_spe(pred, obs)"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/sen_spe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sen_spe — sen_spe","text":"pred  obs","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/sen_spe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sen_spe — sen_spe","text":"large list","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/sen_spe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sen_spe — sen_spe","text":"","code":"TODO #> Error in eval(expr, envir, enclos): object 'TODO' not found"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/seq.rfsrc.html","id":null,"dir":"Reference","previous_headings":"","what":"seq.rfsrc — seq.rfsrc","title":"seq.rfsrc — seq.rfsrc","text":"seq.rfsrc","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/seq.rfsrc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"seq.rfsrc — seq.rfsrc","text":"","code":"# S3 method for rfsrc seq(dat, imp, my.seq, ntree)"},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/seq.rfsrc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"seq.rfsrc — seq.rfsrc","text":"dat  imp  .seq  ntree","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/seq.rfsrc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"seq.rfsrc — seq.rfsrc","text":"list(res = dat)","code":""},{"path":"https://ncezid-biome.github.io/source-attribution-MLST/reference/seq.rfsrc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"seq.rfsrc — seq.rfsrc","text":"","code":"TODO #> Error in eval(expr, envir, enclos): object 'TODO' not found"}]
